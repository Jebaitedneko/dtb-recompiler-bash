# dtb recompiler
# TG: @mochi_wwww / GIT: Jebaitedneko
MATCH="Qualcomm Technologies, Inc. SM8150 v2 SoC"
[ ! -f boot.img ] && echo -e "Run\n\n\nsu\n\nsh img.sh\n\nexit\n\n\nand then re-run run-dtb.sh" && exit

if [ $(env | grep ANDROID_DATA | wc -c) -gt 0 ]; then
    export MAGISKBOOT="$(pwd)/tools/magiskboot"
    export MKDTIMG="$(pwd)/mkdtimg-aarch64"
    export DTC="$(pwd)/dtc-aarch64 -q"
else
    export MAGISKBOOT="$(pwd)/magiskboot-x86"
    export MKDTIMG="$(pwd)/mkdtimg-x86"
    export DTC="$(which dtc) -q"
fi

dir_check() {
    [ -d dtbs ] && rm -rf dtbs; mkdir dtbs || mkdir dtbs
}

common() {
    ( cd dtbs; ls -1 * | while read f; do $DTC -q -I dtb -O dts "$f" -o $(echo "$f" | sed -E "s/.dtb//g;s/dtbos.([0-9]+)/\1/g").dts; done; rm *dtb* )
    mv "$(grep -r "$2" -l dtbs)" "./dts" && rm -rf dtbs
}

unpack_dtb() {
    dir_check
    $MAGISKBOOT unpack "$1" &> /dev/null && mv dtb dtb.pack && rm kernel ramdisk.cpio
    xxd -g0 dtb.pack | cut -f2 -d' ' | cut -f1 -d ' ' | tr -d '\n' | sed -E 's/(d00dfeed)/\n\1/g' > dtb.pack.xxd
    sed -i '1d' dtb.pack.xxd
    grep d00dfeed dtb.pack.xxd | while read f; do i=$((i+1)); echo "$f" > .tmp; xxd -r -p < .tmp > dtbs/$i.dtb; rm .tmp; done
    rm -rf dtb.pack dtb.pack.xxd
    common "$1" "$2"
}

unpack_dtb "boot.img" "$MATCH"
cp dts dts.old
label() {
	sed -i "s/$1 {/$2: $1 {/g" "dts"
}
label "soc" "soc"
label "gpu_opp_table_v2" "gpu_opp"
label "qcom,gpu-pwrlevels-1" "gpu_pwrlvl"
label "lmh-dcvs-00" "lmh_0"
label "lmh-dcvs-01" "lmh_1"
cat "dtb.dtsi" >> "dts"
sed -i "s/==> dts <==//g" "dts"
$DTC -I dts -O dtb "dts" -o "dtb" && rm "dts"
$DTC -I dtb -O dts -o dts.new "dtb"
echo "Done."
echo -e "\nAutogenerated from dtb-recompiler\nby MOCHI [TG: @mochi_wwww | GIT: @Jebaitedneko]\n" >> banner
echo -e "$(diff -ur dts.old dts.new)" >> banner && rm dts.old dts.new
cat dtb.dtsi >> banner