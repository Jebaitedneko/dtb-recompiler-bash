# dtb recompiler
# TG: @mochi_wwww / GIT: Jebaitedneko
MATCH="Qualcomm Technologies, Inc. SM8150 v2 SoC"
if [ $(env | grep ANDROID_DATA | wc -c) -gt 0 ]; then
	if [ ! -d "/cache/py3" ]; then
		mkdir -p /cache/py3
		unzip -q py3.zip -d /cache/py3
		PYTHON="/cache/py3/bin/python"
	fi
	if [ ! -d "/cache/dtc" ]; then
		mkdir -p /cache/dtc
		unzip -q dtc.zip -d /cache/dtc
		DTC="/cache/dtc/bin/dtc -q"
	fi
else
	PYTHON=$(which python)
	DTC="$(which dtc) -q"
fi
[[ ! -f boot.img ]] && echo -e "Run\n\n\nsu\n\nsh img.sh\n\nexit\n\n\nand then re-run run-dtb.sh"  && exit
chmod +x dtb.py && $PYTHON dtb.py boot.img && mv dtb dtbs
mv "$(grep "$MATCH" dtbs/*.dtb -l)" "./dtb" && rm -rf dtbs
$DTC -I dtb -O dts -o dts dtb && rm dtb
cp dts dts.old
function label() {
	sed -i "s/$1 {/$2: $1 {/g" "dts"
}
label "soc" "soc"
label "gpu_opp_table_v2" "gpu_opp"
label "qcom,gpu-pwrlevels-1" "gpu_pwrlvl"
label "lmh-dcvs-00" "lmh_0"
label "lmh-dcvs-01" "lmh_1"
cat "dtb.dtsi" >> "dts"
sed -i "s/==> dts <==//g" "dts"
$DTC -I dts -O dtb "dts" -o "dtb" && rm "dts"
$DTC -I dtb -O dts -o dts.new "dtb"
echo "Done."
echo -e "\nAutogenerated from dtb-recompiler\nby MOCHI [TG: @mochi_wwww | GIT: @Jebaitedneko]\n" >> banner
echo -e "$(diff -ur dts.old dts.new)" >> banner && rm dts.old dts.new
cat dtb.dtsi >> banner
rm -rf /cache/dtc /cache/py3